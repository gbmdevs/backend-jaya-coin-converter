name: Build and Deploy Spring Boot to Heroku

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Java 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Cache Gradle dependencies
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      # Step 4: Grant execute permission for gradlew
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # Step 5: Build the project with Gradle
      - name: Build with Gradle
        run: ./gradlew build bootJar

      # Step 6: Upload the JAR artifact
      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: spring-boot-jar
          path: build/libs/*.jar
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' # Only deploy on push, not on pull requests

    steps:
      # Step 1: Checkout the repository code (needed for Procfile or other config)
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Download the JAR artifact
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: spring-boot-jar
          path: build/libs

      # Step 3: Deploy to Heroku
      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.13.15
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          appdir: "build/libs" # Directory containing the JAR file
          procfile: "web: java -jar build/libs/*.jar" # Procfile content for Heroku